{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CobrancasTableComponent = class CobrancasTableComponent {\n  constructor(route, cobrancaService) {\n    this.route = route;\n    this.cobrancaService = cobrancaService;\n    this.vm = {\n      clienteId: 0,\n      linhas: [{\n        id: 0,\n        clienteId: 0,\n        descricao: '',\n        dataVencimento: new Date(),\n        valor: 0.0,\n        pago: false\n      }]\n    };\n    this.newCobranca = {\n      id: 0,\n      clienteId: 0,\n      descricao: '',\n      dataVencimento: new Date(),\n      valor: 0.0,\n      pago: false\n    };\n  }\n  ngOnInit() {\n    // this.route.data\n    this.route.data.subscribe(d => {\n      console.log('data:', d);\n    });\n    this.route.paramMap.subscribe(params => {\n      this.vm.clienteId = +params.get('id');\n      this.loadCobrancas();\n    });\n  }\n  loadCobrancas() {\n    this.cobrancaService.getAllCobrancas(this.vm.clienteId).subscribe(cobrancas => {\n      this.vm.linhas = cobrancas;\n    });\n  }\n  addCobranca() {\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n      this.vm.linhas.push(cobranca);\n      this.newCobranca = {\n        id: 0,\n        clienteId: 0,\n        valor: 0,\n        dataVencimento: new Date(),\n        pago: false,\n        descricao: ''\n      }; // Reset form\n    });\n  }\n\n  updateCobranca(updatedCobranca) {\n    this.cobrancaService.updateCobranca(updatedCobranca).subscribe(cobranca => {\n      const index = this.vm.linhas.findIndex(c => c.id === cobranca.id);\n      if (index !== -1) {\n        this.vm.linhas[index] = cobranca;\n      }\n    });\n  }\n  deleteCobranca(cobrancaId) {\n    this.cobrancaService.deleteCobranca(cobrancaId).subscribe(() => {\n      this.vm.linhas = this.vm.linhas.filter(c => c.id !== cobrancaId);\n    });\n  }\n};\nCobrancasTableComponent = __decorate([Component({\n  selector: 'app-cobrancas',\n  templateUrl: './cobrancas-table.component.html',\n  styleUrls: ['./cobrancas-table.component.css']\n})], CobrancasTableComponent);\nexport { CobrancasTableComponent };","map":{"version":3,"mappings":"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","names":["Component","CobrancasTableComponent","constructor","route","cobrancaService","clienteId","linhas","id","descricao","dataVencimento","Date","valor","pago","ngOnInit","data","subscribe","d","console","log","paramMap","params","vm","get","loadCobrancas","getAllCobrancas","cobrancas","addCobranca","createCobranca","newCobranca","cobranca","push","updateCobranca","updatedCobranca","index","findIndex","c","deleteCobranca","cobrancaId","filter","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/components/cobrancas-table/cobrancas-table.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CobrancaService } from 'src/app/services/cobranca.service';\nimport { Cobranca } from 'src/app/services/cobranca.model';\nimport { ActivatedRoute } from '@angular/router';\ninterface CobrancaTableViewModel {\n\n  clienteId: number  \n  linhas: Cobranca []\n}\n\n@Component({\n  selector: 'app-cobrancas',\n  templateUrl: './cobrancas-table.component.html',\n  styleUrls: ['./cobrancas-table.component.css']\n})\nexport class CobrancasTableComponent implements OnInit {\n  vm: CobrancaTableViewModel = {\n    clienteId:0\n    ,linhas: [\n      { id: 0, clienteId: 0, descricao: '',dataVencimento: new Date(),valor: 0.0, pago: false }\n    ]\n  };\n  newCobranca: Cobranca = { id: 0, clienteId: 0, descricao: '',dataVencimento: new Date(),valor: 0.0, pago: false };  \n\n  constructor(private route: ActivatedRoute,private cobrancaService: CobrancaService) {}  \n  ngOnInit(): void {\n    // this.route.data\n    this.route.data.subscribe(d => {\n      console.log('data:',d)\n    })\n    this.route.paramMap.subscribe(params => {      \n      this.vm.clienteId = +params.get('id')!\n      this.loadCobrancas();\n    })    \n    \n  }\n\n  loadCobrancas(): void {\n    this.cobrancaService.getAllCobrancas(this.vm.clienteId).subscribe(cobrancas => {\n\n      this.vm.linhas = cobrancas;\n\n    });\n  }\n\n  addCobranca(): void {\n\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n\n      this.vm.linhas.push(cobranca);\n\n      this.newCobranca = { id: 0, clienteId: 0, valor: 0, dataVencimento: new Date(), pago: false, descricao: '' }; // Reset form\n\n    });\n\n  }\n\n\n  updateCobranca(updatedCobranca: Cobranca): void {\n\n    this.cobrancaService.updateCobranca(updatedCobranca).subscribe(cobranca => {\n\n      const index = this.vm.linhas.findIndex(c => c.id === cobranca.id);\n\n      if (index !== -1) {\n\n        this.vm.linhas[index] = cobranca;\n\n      }\n\n    });\n\n  }\n\n\n  deleteCobranca(cobrancaId: number): void {\n\n    this.cobrancaService.deleteCobranca(cobrancaId).subscribe(() => {\n\n      this.vm.linhas = this.vm.linhas.filter(c => c.id !== cobrancaId);\n\n    });\n\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}