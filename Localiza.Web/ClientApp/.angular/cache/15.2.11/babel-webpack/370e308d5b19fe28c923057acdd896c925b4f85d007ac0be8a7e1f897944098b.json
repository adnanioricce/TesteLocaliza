{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/cobranca.service\";\nimport * as i2 from \"@angular/forms\";\nexport class CreateEditModalComponent {\n  // showModal: boolean = false;\n  constructor(cobrancaService) {\n    this.cobrancaService = cobrancaService;\n    this.eventsSubscription = null;\n    this.cobrancaAdded = new EventEmitter();\n    this.modalStateChange = new EventEmitter();\n    this.addCobrancaEvent = null;\n    this._clienteId = 0;\n    this.newCobranca = {\n      id: 0,\n      clienteId: 0,\n      valor: 0,\n      dataVencimento: new Date(),\n      pago: false,\n      descricao: ''\n    };\n  }\n  ngOnInit() {\n    if (!this.addCobrancaEvent) {\n      return;\n    }\n    if (!this.eventsSubscription) {\n      return;\n    }\n    this.eventsSubscription = this.addCobrancaEvent.subscribe(id => {\n      this.openModal(id);\n    });\n  }\n  ngOnDestroy() {\n    if (!this.eventsSubscription) {\n      return;\n    }\n    this.eventsSubscription.unsubscribe();\n  }\n  get clienteId() {\n    return this._clienteId;\n  }\n  set clienteId(id) {\n    this._clienteId = id;\n    this.openModal(id);\n  }\n  openModal(clienteId) {\n    if (clienteId === 0) {\n      return;\n    }\n    this.newCobranca.clienteId = clienteId;\n    // this.showModal = true;\n    this.modalStateChange.emit(true);\n  }\n  closeModal() {\n    this.clienteId = 0;\n    this.modalStateChange.emit(false);\n    // this.showModal = false;    \n  }\n\n  addCobranca() {\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n      this.cobrancaAdded.emit(cobranca);\n      this.closeModal();\n    });\n  }\n  static #_ = this.ɵfac = function CreateEditModalComponent_Factory(t) {\n    return new (t || CreateEditModalComponent)(i0.ɵɵdirectiveInject(i1.CobrancaService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateEditModalComponent,\n    selectors: [[\"app-cobranca-modal\"]],\n    inputs: {\n      addCobrancaEvent: \"addCobrancaEvent\",\n      clienteId: \"clienteId\"\n    },\n    outputs: {\n      cobrancaAdded: \"cobrancaAdded\",\n      modalStateChange: \"modalStateChange\"\n    },\n    decls: 21,\n    vars: 3,\n    consts: [[1, \"modal\"], [1, \"modal-content\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [3, \"ngSubmit\"], [\"for\", \"valor\"], [\"id\", \"valor\", \"type\", \"number\", \"name\", \"valor\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dataVencimento\"], [\"id\", \"dataVencimento\", \"type\", \"date\", \"name\", \"dataVencimento\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"descricao\"], [\"id\", \"descricao\", \"name\", \"descricao\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n    template: function CreateEditModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function CreateEditModalComponent_Template_button_click_2_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵtext(3, \"\\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"h2\");\n        i0.ɵɵtext(5, \"Add Cobranca\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateEditModalComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.addCobranca();\n        });\n        i0.ɵɵelementStart(7, \"div\")(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Valor:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateEditModalComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.newCobranca.valor = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\")(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Data Vencimento:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateEditModalComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.newCobranca.dataVencimento = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\")(16, \"label\", 8);\n        i0.ɵɵtext(17, \"Descri\\u00E7\\u00E3o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateEditModalComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.newCobranca.descricao = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"button\", 10);\n        i0.ɵɵtext(20, \"Add Cobranca\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.newCobranca.valor);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newCobranca.dataVencimento);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newCobranca.descricao);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n    styles: [\".modal[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: fixed;\\n    z-index: 1;\\n    left: 0;\\n    top: 0;\\n    width: 100%;\\n    height: 100%;\\n    overflow: auto;\\n    background-color: rgba(0, 0, 0, 0.5);\\n  }\\n  \\n  .modal-content[_ngcontent-%COMP%] {\\n    background-color: white;\\n    padding: 20px;\\n    border: 1px solid #888;\\n    width: 400px;\\n    border-radius: 5px;\\n  }\\n  \\n  .close[_ngcontent-%COMP%] {\\n    color: #aaa;\\n    float: right;\\n    font-size: 28px;\\n    font-weight: bold;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtZWRpdC1tb2RhbC9hcHAtY29icmFuY2EtbW9kYWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixVQUFVO0lBQ1YsT0FBTztJQUNQLE1BQU07SUFDTixXQUFXO0lBQ1gsWUFBWTtJQUNaLGNBQWM7SUFDZCxvQ0FBb0M7RUFDdEM7O0VBRUE7SUFDRSx1QkFBdUI7SUFDdkIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7SUFDWixlQUFlO0lBQ2YsaUJBQWlCO0VBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDE7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgfVxuICBcbiAgLm1vZGFsLWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzg4ODtcbiAgICB3aWR0aDogNDAwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB9XG4gIFxuICAuY2xvc2Uge1xuICAgIGNvbG9yOiAjYWFhO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","CreateEditModalComponent","constructor","cobrancaService","id","clienteId","valor","dataVencimento","Date","pago","descricao","ngOnInit","addCobrancaEvent","eventsSubscription","subscribe","openModal","ngOnDestroy","unsubscribe","_clienteId","newCobranca","modalStateChange","emit","closeModal","addCobranca","createCobranca","cobranca","cobrancaAdded","selectors","inputs","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/components/create-edit-modal/app-cobranca-modal.component.ts","/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/components/create-edit-modal/app-cobranca-modal.component.html"],"sourcesContent":["import { Component, EventEmitter, Output,Input } from '@angular/core'\nimport { Cobranca } from '../../services/cobranca.model'\nimport { CobrancaService } from '../../services/cobranca.service'\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-cobranca-modal',\n  templateUrl: './app-cobranca-modal.component.html',\n  styleUrls: ['./app-cobranca-modal.component.css']\n})\nexport class CreateEditModalComponent {\n  private eventsSubscription: Subscription | null = null;\n  @Output() cobrancaAdded = new EventEmitter<Cobranca>();  \n  @Output() modalStateChange = new EventEmitter<boolean>();  \n  @Input() addCobrancaEvent:Observable<number> | null = null;\n  _clienteId: number = 0;\n  newCobranca: Cobranca = { id: 0, clienteId: 0, valor: 0, dataVencimento: new Date(), pago: false, descricao: '' };\n  // showModal: boolean = false;\n\n  constructor(private cobrancaService: CobrancaService) {        \n    \n  }\n  ngOnInit(){\n    if(!this.addCobrancaEvent){\n      return;\n    }\n    if(!this.eventsSubscription){\n      return;\n    }\n    this.eventsSubscription = this.addCobrancaEvent.subscribe((id) => {\n      this.openModal(id)\n    });\n  }\n  \n  ngOnDestroy() {\n    if(!this.eventsSubscription){\n      return;\n    }\n    this.eventsSubscription.unsubscribe();\n  }\n  \n  public get clienteId() : number {\n    return this._clienteId\n  }\n  @Input()\n  public set clienteId(id:number) {    \n    this._clienteId = id\n    this.openModal(id);\n  }\n  openModal(clienteId: number): void {\n    if(clienteId === 0){\n      return;\n    }    \n    this.newCobranca.clienteId = clienteId;\n    // this.showModal = true;\n    this.modalStateChange.emit(true)\n  }\n\n\n  closeModal(): void {    \n    this.clienteId = 0    \n    this.modalStateChange.emit(false)\n    // this.showModal = false;    \n  }\n\n  addCobranca(): void {\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n      this.cobrancaAdded.emit(cobranca);\n      this.closeModal();\n    });\n  }\n}","<div class=\"modal\">\n    <div class=\"modal-content\">\n      <button type=\"button\" class=\"close\" (click)=\"closeModal()\">&times;</button>\n      <h2>Add Cobranca</h2>\n      <form (ngSubmit)=\"addCobranca()\">\n        <div>\n          <label for=\"valor\">Valor:</label>\n          <input id=\"valor\" type=\"number\" [(ngModel)]=\"newCobranca.valor\" name=\"valor\" required>\n        </div>\n        <div>\n          <label for=\"dataVencimento\">Data Vencimento:</label>\n          <input id=\"dataVencimento\" type=\"date\" [(ngModel)]=\"newCobranca.dataVencimento\" name=\"dataVencimento\" required>\n        </div>\n        <div>\n          <label for=\"descricao\">Descrição:</label>\n          <input id=\"descricao\" [(ngModel)]=\"newCobranca.descricao\" name=\"descricao\">\n        </div>\n        <button type=\"submit\">Add Cobranca</button>\n      </form>\n    </div>\n  </div>\n<!-- <div class=\"modal\">\n    <div class=\"modal-content\">\n        <span class=\"close\" (click)=\"closeModal()\">&times;</span>\n        <h2>{{ isEdit ? 'Editar Cliente' : 'Cadastrar Cliente' }}</h2>\n        <form (ngSubmit)=\"save()\">\n            <label for=\"name\">Nome:</label>\n            <input type=\"text\" [(ngModel)]=\"cliente.name\" name=\"name\" required>\n            <label for=\"paginas\">Páginas:</label>\n            <input type=\"number\" [(ngModel)]=\"cliente.paginas\" name=\"paginas\" required>\n            <label for=\"alertas\">Alertas:</label>\n            <input type=\"number\" [(ngModel)]=\"cliente.alertas\" name=\"alertas\" required>\n            <label for=\"atrasos\">Atrasos:</label>\n            <input type=\"number\" [(ngModel)]=\"cliente.atrasos\" name=\"atrasos\" required>\n            <button type=\"submit\" class=\"btn btn-success\">{{ isEdit ? 'Atualizar' : 'Cadastrar' }}</button>\n        </form>\n    </div>\n</div> -->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}