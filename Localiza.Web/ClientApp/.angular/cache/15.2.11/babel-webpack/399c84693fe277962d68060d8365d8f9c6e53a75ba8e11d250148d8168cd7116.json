{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CobrancaService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7012/api/cobrancas';\n  }\n  createCobranca(cobranca) {\n    return this.http.post(this.baseUrl, cobranca);\n  }\n  getCobrancaById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  getAllCobrancas(clienteId) {\n    return this.http.get(`${this.baseUrl.replace('cobrancas', 'clientes')}/${clienteId}/cobrancas`);\n  }\n  updateCobranca(cobranca) {\n    return this.http.put(`${this.baseUrl}/${cobranca.id}`, cobranca);\n  }\n  deleteCobranca(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  static #_ = this.ɵfac = function CobrancaService_Factory(t) {\n    return new (t || CobrancaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CobrancaService,\n    factory: CobrancaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAW,sCAAsC;EAEzB;EAEvCC,cAAc,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAW,IAAI,CAACC,OAAO,EAAEF,QAAQ,CAAC;EACzD;EAEAG,eAAe,CAACC,EAAU;IACxB,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAW,GAAG,IAAI,CAACH,OAAO,IAAIE,EAAE,EAAE,CAAC;EACzD;EAEAE,eAAe,CAACC,SAAiB;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAa,GAAG,IAAI,CAACH,OAAO,CAACM,OAAO,CAAC,WAAW,EAAC,UAAU,CAAC,IAAID,SAAS,YAAY,CAAC;EAC5G;EAEAE,cAAc,CAACT,QAAkB;IAC/B,OAAO,IAAI,CAACF,IAAI,CAACY,GAAG,CAAW,GAAG,IAAI,CAACR,OAAO,IAAIF,QAAQ,CAACI,EAAE,EAAE,EAAEJ,QAAQ,CAAC;EAC5E;EAEAW,cAAc,CAACP,EAAU;IACvB,OAAO,IAAI,CAACN,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACV,OAAO,IAAIE,EAAE,EAAE,CAAC;EACxD;EAAC;qBAvBUR,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAiB,SAAfjB,eAAe;IAAAkB,YAFd;EAAM","names":["CobrancaService","constructor","http","createCobranca","cobranca","post","baseUrl","getCobrancaById","id","get","getAllCobrancas","clienteId","replace","updateCobranca","put","deleteCobranca","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/services/cobranca.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cobranca } from './cobranca.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CobrancaService {\n  private baseUrl: string = 'https://localhost:7012/api/cobrancas';\n\n  constructor(private http: HttpClient) {}\n\n  createCobranca(cobranca: Cobranca): Observable<Cobranca> {\n    return this.http.post<Cobranca>(this.baseUrl, cobranca);\n  }\n\n  getCobrancaById(id: number): Observable<Cobranca> {\n    return this.http.get<Cobranca>(`${this.baseUrl}/${id}`);\n  }\n\n  getAllCobrancas(clienteId: number): Observable<Cobranca[]> {\n    return this.http.get<Cobranca[]>(`${this.baseUrl.replace('cobrancas','clientes')}/${clienteId}/cobrancas`);\n  }\n\n  updateCobranca(cobranca: Cobranca): Observable<Cobranca> {\n    return this.http.put<Cobranca>(`${this.baseUrl}/${cobranca.id}`, cobranca);\n  }\n\n  deleteCobranca(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}