{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nlet ClienteTableComponent = class ClienteTableComponent {\n  /**\n   *\n   */\n  constructor(clienteService, cobrancaService, fb) {\n    this.clienteService = clienteService;\n    this.cobrancaService = cobrancaService;\n    this.fb = fb;\n    // clienteService: ClienteService\n    this.addCobrancaMsg = {\n      clienteId: 0\n    };\n    this.initAddCobrancaEvent = new Subject();\n    this.isAddingCobranca = false;\n    this.clientes = [];\n    this.newCliente = {\n      id: 0,\n      usuarioId: 0,\n      documento: '',\n      nome: '',\n      telefone: '',\n      endereco: ''\n    };\n    this.isEditing = false;\n    this.currentClienteId = 0;\n    this.newCobranca = {\n      id: 0,\n      clienteId: 0,\n      valor: 0,\n      dataVencimento: new Date(),\n      pago: false,\n      descricao: ''\n    };\n    this.clienteForm = this.fb.group({\n      nome: ['', Validators.required],\n      documento: ['', Validators.required],\n      telefone: ['', Validators.required],\n      endereco: ['', Validators.required]\n    });\n  }\n  get inputToChild() {\n    return this.addCobrancaMsg;\n  }\n  set inputToChild(value) {\n    this.addCobrancaMsg = value;\n  }\n  ngOnInit() {\n    this.loadClientes();\n  }\n  loadClientes() {\n    this.clienteService.loadClientes().subscribe(clientes => {\n      this.clientes = clientes;\n      console.log('clientes:', clientes);\n    });\n  }\n  editCliente(cliente) {\n    if (!this.isEditing) {\n      console.log('client:', cliente);\n      return;\n    }\n    this.clienteService.editCliente(cliente);\n  }\n  deleteCliente(clienteId) {\n    console.log('clienteId:', clienteId);\n    this.clienteService.deleteCliente(clienteId).subscribe(_ => {\n      this.loadClientes();\n    });\n  }\n  addOrUpdateCliente() {}\n  toggleModal(newState) {\n    console.log('newState:', newState);\n    this.isAddingCobranca = newState;\n  }\n  // cobranca operations\n  openCobrancaModal(clienteId) {\n    this.currentClienteId = clienteId;\n    this.initAddCobrancaEvent.next(clienteId);\n    this.isAddingCobranca = true;\n    // this.onAddCobrancaClick.emit(this.currentClienteId)\n    console.log('this.currentClienteId:', this.currentClienteId);\n  }\n  onCobrancaAdded(cobranca) {\n    console.log('New Cobranca Added:', cobranca);\n  }\n  openModal(clienteId) {\n    if (clienteId === 0) {\n      return;\n    }\n    this.newCobranca.clienteId = clienteId;\n  }\n  closeModal() {\n    this.currentClienteId = 0;\n  }\n  addCobranca() {\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n      this.cobrancaAdded.emit(cobranca);\n      this.closeModal();\n    });\n  }\n};\nClienteTableComponent = __decorate([Component({\n  selector: 'app-cliente-table',\n  templateUrl: './cliente-table.component.html',\n  styleUrls: ['./cliente-table.component.css']\n})], ClienteTableComponent);\nexport { ClienteTableComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","Subject","ClienteTableComponent","constructor","clienteService","cobrancaService","fb","clienteId","id","usuarioId","documento","nome","telefone","endereco","valor","dataVencimento","Date","pago","descricao","clienteForm","group","required","inputToChild","addCobrancaMsg","value","ngOnInit","loadClientes","subscribe","clientes","console","log","editCliente","cliente","isEditing","deleteCliente","_","addOrUpdateCliente","toggleModal","newState","isAddingCobranca","openCobrancaModal","currentClienteId","initAddCobrancaEvent","next","onCobrancaAdded","cobranca","openModal","newCobranca","closeModal","addCobranca","createCobranca","cobrancaAdded","emit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/components/cliente-table/cliente-table.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnChanges, Output, SimpleChanges,EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { Cliente } from 'src/app/services/cliente.model';\nimport { ClienteService } from 'src/app/services/cliente.service';\nimport { Cobranca } from 'src/app/services/cobranca.model';\n\n@Component({\n  selector: 'app-cliente-table',\n  templateUrl: './cliente-table.component.html',\n  styleUrls: ['./cliente-table.component.css']\n})\nexport class ClienteTableComponent {  \n  // clienteService: ClienteService\n  addCobrancaMsg:object = {clienteId: 0}\n  initAddCobrancaEvent: Subject<number> = new Subject<number>();\n  isAddingCobranca = false\n  clientes:Cliente[] = []\n  newCliente: Cliente = { id: 0, usuarioId: 0, documento: '', nome: '',telefone: '',endereco:'' };\n  clienteForm: FormGroup;\n  isEditing = false;\n  currentClienteId: number = 0;  \n  newCobranca: Cobranca = { id: 0, clienteId: 0, valor: 0, dataVencimento: new Date(), pago: false, descricao: '' };\n  /**\n   *\n   */\n  constructor(private clienteService:ClienteService,private cobrancaService: CobrancaService,private fb: FormBuilder) {        \n    this.clienteForm = this.fb.group({\n      nome: ['',Validators.required],\n      documento: ['', Validators.required],\n      telefone: ['', Validators.required],\n      endereco: ['', Validators.required]\n    });\n  }\n  public get inputToChild(): object{\n    return this.addCobrancaMsg\n  }  \n  public set inputToChild(value:object) {\n    this.addCobrancaMsg = value\n  }\n  ngOnInit(): void {\n    this.loadClientes()\n  }\n  loadClientes(){\n    this.clienteService.loadClientes().subscribe(clientes => {\n      this.clientes = clientes;\n      console.log('clientes:',clientes)\n    });\n  }\n  editCliente(cliente:Cliente) {    \n    if(!this.isEditing){\n      console.log('client:',cliente)\n      return;\n    }\n    this.clienteService.editCliente(cliente)\n  }\n\n  deleteCliente(clienteId:number) {\n    console.log('clienteId:',clienteId)\n    this.clienteService.deleteCliente(clienteId).subscribe(_ => {      \n      this.loadClientes()\n    });\n  }  \n\n  addOrUpdateCliente() {    \n  }  \n  toggleModal(newState:boolean){\n    console.log('newState:',newState)\n    this.isAddingCobranca = newState\n  }\n  // cobranca operations\n  openCobrancaModal(clienteId: number): void {    \n    this.currentClienteId = clienteId;    \n    this.initAddCobrancaEvent.next(clienteId)\n    this.isAddingCobranca = true\n    // this.onAddCobrancaClick.emit(this.currentClienteId)\n    console.log('this.currentClienteId:',this.currentClienteId)\n    \n  }\n\n  onCobrancaAdded(cobranca: Cobranca): void {    \n    console.log('New Cobranca Added:', cobranca);\n  }\n  openModal(clienteId: number): void {\n    if(clienteId === 0){\n      return;\n    }    \n    this.newCobranca.clienteId = clienteId;            \n  }\n\n\n  closeModal(): void {    \n    this.currentClienteId = 0\n  }\n\n  addCobranca(): void {\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n      this.cobrancaAdded.emit(cobranca);\n      this.closeModal();\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}