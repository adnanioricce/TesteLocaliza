{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/cobranca.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CobrancasTableComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function CobrancasTableComponent_tr_17_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const cobranca_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateCobranca(cobranca_r1));\n    });\n    i0.ɵɵtext(13, \"Atualizar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function CobrancasTableComponent_tr_17_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const cobranca_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteCobranca(cobranca_r1.id));\n    });\n    i0.ɵɵtext(15, \"Excluir\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cobranca_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cobranca_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cobranca_r1.valor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cobranca_r1.dataVencimento);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cobranca_r1.pago);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cobranca_r1.descricao);\n  }\n}\nexport class CobrancasTableComponent {\n  constructor(cobrancaService) {\n    this.cobrancaService = cobrancaService;\n    this.vm = {\n      clienteId: 0,\n      linhas: []\n    };\n    this.newCobranca = {\n      id: 0,\n      clienteId: 0,\n      descricao: '',\n      dataVencimento: new Date(),\n      valor: 0.0,\n      pago: false\n    };\n    this.apiUrl = 'https://api.example.com/cobrancas';\n  }\n  ngOnInit() {\n    this.loadCobrancas();\n  }\n  loadCobrancas() {\n    this.cobrancaService.getAllCobrancas().subscribe(cobrancas => {\n      this.vm.linhas = cobrancas;\n    });\n  }\n  addCobranca() {\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n      this.vm.linhas.push(cobranca);\n      this.newCobranca = {\n        id: 0,\n        clienteId: 0,\n        valor: 0,\n        dataVencimento: new Date(),\n        pago: false,\n        descricao: ''\n      }; // Reset form\n    });\n  }\n\n  updateCobranca(updatedCobranca) {\n    this.cobrancaService.updateCobranca(updatedCobranca).subscribe(cobranca => {\n      const index = this.vm.linhas.findIndex(c => c.id === cobranca.id);\n      if (index !== -1) {\n        this.vm.linhas[index] = cobranca;\n      }\n    });\n  }\n  deleteCobranca(cobrancaId) {\n    this.cobrancaService.deleteCobranca(cobrancaId).subscribe(() => {\n      this.vm.linhas = this.vm.linhas.filter(c => c.id !== cobrancaId);\n    });\n  }\n  static #_ = this.ɵfac = function CobrancasTableComponent_Factory(t) {\n    return new (t || CobrancasTableComponent)(i0.ɵɵdirectiveInject(i1.CobrancaService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CobrancasTableComponent,\n    selectors: [[\"app-cobrancas\"]],\n    decls: 39,\n    vars: 5,\n    consts: [[1, \"container\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"for\", \"clienteId\"], [\"id\", \"clienteId\", \"name\", \"clienteId\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"valor\"], [\"id\", \"valor\", \"type\", \"number\", \"name\", \"valor\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dataVencimento\"], [\"id\", \"dataVencimento\", \"type\", \"date\", \"name\", \"dataVencimento\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"descricao\"], [\"id\", \"descricao\", \"name\", \"descricao\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [3, \"click\"]],\n    template: function CobrancasTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Cobrancas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\")(4, \"thead\")(5, \"tr\")(6, \"th\");\n        i0.ɵɵtext(7, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"Valor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"DataVencimento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"pago\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Descricao\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"tbody\");\n        i0.ɵɵtemplate(17, CobrancasTableComponent_tr_17_Template, 16, 5, \"tr\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"h2\");\n        i0.ɵɵtext(19, \"Adicionar Cobranca\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function CobrancasTableComponent_Template_form_ngSubmit_20_listener() {\n          return ctx.addCobranca();\n        });\n        i0.ɵɵelementStart(21, \"div\")(22, \"label\", 3);\n        i0.ɵɵtext(23, \"Cliente ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CobrancasTableComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.newCobranca.clienteId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\")(26, \"label\", 5);\n        i0.ɵɵtext(27, \"Valor:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function CobrancasTableComponent_Template_input_ngModelChange_28_listener($event) {\n          return ctx.newCobranca.valor = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\")(30, \"label\", 7);\n        i0.ɵɵtext(31, \"Data Vencimento:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function CobrancasTableComponent_Template_input_ngModelChange_32_listener($event) {\n          return ctx.newCobranca.dataVencimento = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\")(34, \"label\", 9);\n        i0.ɵɵtext(35, \"Descri\\u00E7\\u00E3o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function CobrancasTableComponent_Template_input_ngModelChange_36_listener($event) {\n          return ctx.newCobranca.descricao = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"button\", 11);\n        i0.ɵɵtext(38, \"Cadastrar Cobran\\u00E7a\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.vm.linhas);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.newCobranca.clienteId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newCobranca.valor);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newCobranca.dataVencimento);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newCobranca.descricao);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  margin: 20px;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-collapse: collapse;\\n}\\n\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  border: 1px solid #000;\\n  padding: 10px;\\n  text-align: left;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb2JyYW5jYXMtdGFibGUvY29icmFuY2FzLXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWFyZ2luOiAyMHB4O1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuXG50aCwgdGQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDAwO1xuICBwYWRkaW5nOiAxMHB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG5idXR0b24ge1xuICBtYXJnaW46IDVweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","CobrancasTableComponent","constructor","cobrancaService","clienteId","linhas","id","descricao","dataVencimento","Date","valor","pago","ngOnInit","loadCobrancas","getAllCobrancas","subscribe","cobrancas","vm","addCobranca","createCobranca","newCobranca","cobranca","push","updateCobranca","updatedCobranca","index","findIndex","c","deleteCobranca","cobrancaId","filter","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/components/cobrancas-table/cobrancas-table.component.html","/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/components/cobrancas-table/cobrancas-table.component.ts"],"sourcesContent":["<div class=\"container\">\n    <h1>Cobrancas</h1>\n    <table>\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Valor</th>\n          <th>DataVencimento</th>\n          <th>pago</th>\n          <th>Descricao</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let cobranca of vm.linhas\">\n          <td>{{ cobranca.id }}</td>\n          <td>{{ cobranca.valor }}</td>\n          <td>{{ cobranca.dataVencimento }}</td>\n          <td>{{ cobranca.pago }}</td>\n          <td>{{ cobranca.descricao }}</td>\n          <td>\n            <button (click)=\"updateCobranca(cobranca)\">Atualizar</button>\n            <button (click)=\"deleteCobranca(cobranca.id)\">Excluir</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  \n    <h2>Adicionar Cobranca</h2>          \n    <form (ngSubmit)=\"addCobranca()\">\n      <div>\n        <label for=\"clienteId\">Cliente ID:</label>\n        <input id=\"clienteId\" [(ngModel)]=\"newCobranca.clienteId\" name=\"clienteId\" required>\n      </div>\n      <div>\n        <label for=\"valor\">Valor:</label>\n        <input id=\"valor\" type=\"number\" [(ngModel)]=\"newCobranca.valor\" name=\"valor\" required>\n      </div>\n      <div>\n        <label for=\"dataVencimento\">Data Vencimento:</label>\n        <input id=\"dataVencimento\" type=\"date\" [(ngModel)]=\"newCobranca.dataVencimento\" name=\"dataVencimento\" required>\n      </div>\n      <div>\n        <label for=\"descricao\">Descrição:</label>\n        <input id=\"descricao\" [(ngModel)]=\"newCobranca.descricao\" name=\"descricao\">\n      </div>\n      <button type=\"submit\">Cadastrar Cobrança</button>\n    </form>        \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { CobrancaService } from 'src/app/services/cobranca.service';\nimport { Cobranca } from 'src/app/services/cobranca.model';\ninterface CobrancaTableViewModel {\n\n  clienteId: number  \n  linhas: Cobranca []\n}\n\n@Component({\n  selector: 'app-cobrancas',\n  templateUrl: './cobrancas-table.component.html',\n  styleUrls: ['./cobrancas-table.component.css']\n})\nexport class CobrancasTableComponent implements OnInit {\n  vm: CobrancaTableViewModel = {\n    clienteId:0\n    ,linhas: []\n  };\n  newCobranca: Cobranca = { id: 0, clienteId: 0, descricao: '',dataVencimento: new Date(),valor: 0.0, pago: false };\n\n  private apiUrl = 'https://api.example.com/cobrancas';\n\n  constructor(private cobrancaService: CobrancaService) {}  \n  ngOnInit(): void {\n    this.loadCobrancas();\n  }\n\n  loadCobrancas(): void {\n    this.cobrancaService.getAllCobrancas().subscribe(cobrancas => {\n\n      this.vm.linhas = cobrancas;\n\n    });\n  }\n\n  addCobranca(): void {\n\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n\n      this.vm.linhas.push(cobranca);\n\n      this.newCobranca = { id: 0, clienteId: 0, valor: 0, dataVencimento: new Date(), pago: false, descricao: '' }; // Reset form\n\n    });\n\n  }\n\n\n  updateCobranca(updatedCobranca: Cobranca): void {\n\n    this.cobrancaService.updateCobranca(updatedCobranca).subscribe(cobranca => {\n\n      const index = this.vm.linhas.findIndex(c => c.id === cobranca.id);\n\n      if (index !== -1) {\n\n        this.vm.linhas[index] = cobranca;\n\n      }\n\n    });\n\n  }\n\n\n  deleteCobranca(cobrancaId: number): void {\n\n    this.cobrancaService.deleteCobranca(cobrancaId).subscribe(() => {\n\n      this.vm.linhas = this.vm.linhas.filter(c => c.id !== cobrancaId);\n\n    });\n\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}