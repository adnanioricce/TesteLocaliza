{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/cobranca.service\";\nimport * as i3 from \"@angular/common\";\nfunction CobrancasTableComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 3);\n    i0.ɵɵtext(9, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 3);\n    i0.ɵɵtext(11, \"Deletar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cobranca_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cobranca_r1.descricao);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"R$ \", cobranca_r1.valor.toFixed(2), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.formatDate(cobranca_r1.dataVencimento));\n  }\n}\nexport class CobrancasTableComponent {\n  constructor(route, cobrancaService) {\n    this.route = route;\n    this.cobrancaService = cobrancaService;\n    this.vm = {\n      clienteId: 0,\n      linhas: [{\n        id: 0,\n        clienteId: 0,\n        descricao: '',\n        dataVencimento: new Date(),\n        valor: 0.0,\n        pago: false\n      }]\n    };\n    this.newCobranca = {\n      id: 0,\n      clienteId: 0,\n      descricao: '',\n      dataVencimento: new Date(),\n      valor: 0.0,\n      pago: false\n    };\n  }\n  ngOnInit() {\n    // this.route.data\n    this.route.data.subscribe(d => {\n      console.log('data:', d);\n    });\n    this.route.paramMap.subscribe(params => {\n      this.vm.clienteId = +params.get('id');\n      this.loadCobrancas();\n    });\n  }\n  formatDate(date) {\n    console.log('date:', date);\n    return date.toLocaleDateString();\n  }\n  loadCobrancas() {\n    this.cobrancaService.getAllCobrancas(this.vm.clienteId).subscribe(cobrancas => {\n      this.vm.linhas = cobrancas;\n    });\n  }\n  addCobranca() {\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n      this.vm.linhas.push(cobranca);\n      this.newCobranca = {\n        id: 0,\n        clienteId: 0,\n        valor: 0,\n        dataVencimento: new Date(),\n        pago: false,\n        descricao: ''\n      }; // Reset form\n    });\n  }\n\n  updateCobranca(updatedCobranca) {\n    this.cobrancaService.updateCobranca(updatedCobranca).subscribe(cobranca => {\n      const index = this.vm.linhas.findIndex(c => c.id === cobranca.id);\n      if (index !== -1) {\n        this.vm.linhas[index] = cobranca;\n      }\n    });\n  }\n  deleteCobranca(cobrancaId) {\n    this.cobrancaService.deleteCobranca(cobrancaId).subscribe(() => {\n      this.vm.linhas = this.vm.linhas.filter(c => c.id !== cobrancaId);\n    });\n  }\n  static #_ = this.ɵfac = function CobrancasTableComponent_Factory(t) {\n    return new (t || CobrancasTableComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CobrancaService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CobrancasTableComponent,\n    selectors: [[\"app-cobrancas\"]],\n    decls: 17,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"btn\", \"cadastrar\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"acao\"]],\n    template: function CobrancasTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Cobrancas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵtext(4, \"Cadastrar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"table\")(6, \"thead\")(7, \"tr\")(8, \"th\");\n        i0.ɵɵtext(9, \"Descri\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Valor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Vencimento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"th\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"tbody\");\n        i0.ɵɵtemplate(16, CobrancasTableComponent_tr_16_Template, 12, 3, \"tr\", 2);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.vm.linhas);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\".table-container[_ngcontent-%COMP%] {\\n  background-color: #f5f5f5;\\n  padding: 20px;\\n  border-radius: 8px;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  margin-bottom: 20px;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-collapse: collapse;\\n}\\n\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  padding: 15px;\\n  text-align: left;\\n}\\n\\nth[_ngcontent-%COMP%] {\\n  background-color: #000;\\n  color: #fff;\\n}\\n\\ntr[_ngcontent-%COMP%]:nth-child(even) {\\n  background-color: #e0e0e0;\\n}\\n\\n.green[_ngcontent-%COMP%] {\\n  color: green;\\n}\\n\\n.blue[_ngcontent-%COMP%] {\\n  color: blue;\\n}\\n\\n.red[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  padding: 10px 15px;\\n  margin: 0 5px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\n.btn.cadastrar[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  color: white;\\n}\\n\\n.btn.acao[_ngcontent-%COMP%] {\\n  background-color: #28a745;\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb2JyYW5jYXMtdGFibGUvY29icmFuY2FzLXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUNBQWlDO0FBQ2pDO0VBQ0UseUJBQXlCO0VBQ3pCLGFBQWE7RUFDYixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsV0FBVztBQUNiOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtBQUNkOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGNsaWVudGVzLXRhYmxlLmNvbXBvbmVudC5jc3MgKi9cbi50YWJsZS1jb250YWluZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xuICBwYWRkaW5nOiAyMHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG5cbmgyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG59XG5cbnRoLCB0ZCB7XG4gIHBhZGRpbmc6IDE1cHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbnRoIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbnRyOm50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMGUwZTA7XG59XG5cbi5ncmVlbiB7XG4gIGNvbG9yOiBncmVlbjtcbn1cblxuLmJsdWUge1xuICBjb2xvcjogYmx1ZTtcbn1cblxuLnJlZCB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5idG4ge1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIG1hcmdpbjogMCA1cHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5idG4uY2FkYXN0cmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuLmFjYW8ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjhhNzQ1O1xuICBjb2xvcjogd2hpdGU7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","CobrancasTableComponent","constructor","route","cobrancaService","clienteId","linhas","id","descricao","dataVencimento","Date","valor","pago","ngOnInit","data","subscribe","d","console","log","paramMap","params","vm","get","loadCobrancas","formatDate","date","toLocaleDateString","getAllCobrancas","cobrancas","addCobranca","createCobranca","newCobranca","cobranca","push","updateCobranca","updatedCobranca","index","findIndex","c","deleteCobranca","cobrancaId","filter","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/components/cobrancas-table/cobrancas-table.component.html","/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/components/cobrancas-table/cobrancas-table.component.ts"],"sourcesContent":["<div class=\"container\">\n    <h1>Cobrancas</h1>\n    <button class=\"btn cadastrar\">Cadastrar</button>\n    <table>\n      <thead>\n        <tr>\n          <th>Descrição</th>\n          <th>Valor</th>\n          <th>Vencimento</th>\n          <th></th>          \n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let cobranca of vm.linhas\">\n          <td>{{cobranca.descricao}}</td>\n          <td>R$ {{cobranca.valor.toFixed(2)}}</td>\n          <td>{{formatDate(cobranca.dataVencimento)}}</td>\n          <!-- <td><span [ngClass]=\"{'green': 10 > 20}\">{{ 12 }}</span></td>\n          <td><span [ngClass]=\"{'blue': 1 > 0, 'red': vm.linhas.length > 1}\">{{ 15 }}</span></td>\n          <td><span [ngClass]=\"{'blue': 0 > 0, 'red': vm.clienteId === 0}\">{{ 2 }}</span></td> -->\n          <td>\n            <button class=\"btn acao\">Editar</button>\n            <button class=\"btn acao\">Deletar</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <!-- Transforme isso em uma modal -->\n    <!-- <table>\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Valor</th>\n          <th>DataVencimento</th>\n          <th>pago</th>\n          <th>Descricao</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let cobranca of vm.linhas\">\n          <td>{{ cobranca.id }}</td>\n          <td>{{ cobranca.valor }}</td>\n          <td>{{ cobranca.dataVencimento }}</td>\n          <td>{{ cobranca.pago }}</td>\n          <td>{{ cobranca.descricao }}</td>\n          <td>\n            <button (click)=\"updateCobranca(cobranca)\">Atualizar</button>\n            <button (click)=\"deleteCobranca(cobranca.id)\">Excluir</button>\n          </td>\n        </tr>\n      </tbody>\n    </table> -->\n  \n    <!-- <h2>Adicionar Cobranca</h2>           -->\n    <!-- <form (ngSubmit)=\"addCobranca()\">\n      <div>\n        <label for=\"clienteId\">Cliente ID:</label>\n        <input id=\"clienteId\" [(ngModel)]=\"newCobranca.clienteId\" name=\"clienteId\" required>\n      </div>\n      <div>\n        <label for=\"valor\">Valor:</label>\n        <input id=\"valor\" type=\"number\" [(ngModel)]=\"newCobranca.valor\" name=\"valor\" required>\n      </div>\n      <div>\n        <label for=\"dataVencimento\">Data Vencimento:</label>\n        <input id=\"dataVencimento\" type=\"date\" [(ngModel)]=\"newCobranca.dataVencimento\" name=\"dataVencimento\" required>\n      </div>\n      <div>\n        <label for=\"descricao\">Descrição:</label>\n        <input id=\"descricao\" [(ngModel)]=\"newCobranca.descricao\" name=\"descricao\">\n      </div>\n      <button type=\"submit\">Cadastrar Cobrança</button>\n    </form>         -->\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { CobrancaService } from 'src/app/services/cobranca.service';\nimport { Cobranca } from 'src/app/services/cobranca.model';\nimport { ActivatedRoute } from '@angular/router';\ninterface CobrancaTableViewModel {\n\n  clienteId: number  \n  linhas: Cobranca []\n}\n\n@Component({\n  selector: 'app-cobrancas',\n  templateUrl: './cobrancas-table.component.html',\n  styleUrls: ['./cobrancas-table.component.css']\n})\nexport class CobrancasTableComponent implements OnInit {\n  vm: CobrancaTableViewModel = {\n    clienteId:0\n    ,linhas: [\n      { id: 0, clienteId: 0, descricao: '',dataVencimento: new Date(),valor: 0.0, pago: false }\n    ]\n  };\n  newCobranca: Cobranca = { id: 0, clienteId: 0, descricao: '',dataVencimento: new Date(),valor: 0.0, pago: false };  \n\n  constructor(private route: ActivatedRoute,private cobrancaService: CobrancaService) {}  \n  ngOnInit(): void {\n    // this.route.data\n    this.route.data.subscribe(d => {\n      console.log('data:',d)\n    })\n    this.route.paramMap.subscribe(params => {      \n      this.vm.clienteId = +params.get('id')!\n      this.loadCobrancas();\n    })    \n    \n  }\n  formatDate(date:Date):string {\n    console.log('date:',date)\n    return date.toLocaleDateString()\n  }\n  loadCobrancas(): void {\n    this.cobrancaService.getAllCobrancas(this.vm.clienteId).subscribe(cobrancas => {\n\n      this.vm.linhas = cobrancas;\n\n    });\n  }\n\n  addCobranca(): void {\n\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n\n      this.vm.linhas.push(cobranca);\n\n      this.newCobranca = { id: 0, clienteId: 0, valor: 0, dataVencimento: new Date(), pago: false, descricao: '' }; // Reset form\n\n    });\n\n  }\n\n\n  updateCobranca(updatedCobranca: Cobranca): void {\n\n    this.cobrancaService.updateCobranca(updatedCobranca).subscribe(cobranca => {\n\n      const index = this.vm.linhas.findIndex(c => c.id === cobranca.id);\n\n      if (index !== -1) {\n\n        this.vm.linhas[index] = cobranca;\n\n      }\n\n    });\n\n  }\n\n\n  deleteCobranca(cobrancaId: number): void {\n\n    this.cobrancaService.deleteCobranca(cobrancaId).subscribe(() => {\n\n      this.vm.linhas = this.vm.linhas.filter(c => c.id !== cobrancaId);\n\n    });\n\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}