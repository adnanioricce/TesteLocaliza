{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output, Input } from '@angular/core';\nlet CreateEditModalComponent = class CreateEditModalComponent {\n  // showModal: boolean = false;\n  constructor(cobrancaService) {\n    this.cobrancaService = cobrancaService;\n    this.eventsSubscription = null;\n    this.cobrancaAdded = new EventEmitter();\n    this.modalStateChange = new EventEmitter();\n    this.addCobrancaEvent = null;\n    this._clienteId = 0;\n    this.newCobranca = {\n      id: 0,\n      clienteId: 0,\n      valor: 0,\n      dataVencimento: new Date(),\n      pago: false,\n      descricao: ''\n    };\n  }\n  ngOnInit() {\n    if (!this.addCobrancaEvent) {\n      return;\n    }\n    if (!this.eventsSubscription) {\n      return;\n    }\n    this.eventsSubscription = this.addCobrancaEvent.subscribe(id => {\n      this.openModal(id);\n    });\n  }\n  ngOnDestroy() {\n    if (!this.eventsSubscription) {\n      return;\n    }\n    this.eventsSubscription.unsubscribe();\n  }\n  get clienteId() {\n    return this._clienteId;\n  }\n  set clienteId(id) {\n    this._clienteId = id;\n    this.openModal(id);\n  }\n  openModal(clienteId) {\n    if (clienteId === 0) {\n      return;\n    }\n    this.newCobranca.clienteId = clienteId;\n    // this.showModal = true;\n    this.modalStateChange.emit(true);\n  }\n  closeModal() {\n    this.clienteId = 0;\n    this.modalStateChange.emit(false);\n    // this.showModal = false;    \n  }\n\n  addCobranca() {\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n      this.cobrancaAdded.emit(cobranca);\n      this.closeModal();\n    });\n  }\n};\n__decorate([Output()], CreateEditModalComponent.prototype, \"cobrancaAdded\", void 0);\n__decorate([Output()], CreateEditModalComponent.prototype, \"modalStateChange\", void 0);\n__decorate([Input()], CreateEditModalComponent.prototype, \"addCobrancaEvent\", void 0);\n__decorate([Input()], CreateEditModalComponent.prototype, \"clienteId\", null);\nCreateEditModalComponent = __decorate([Component({\n  selector: 'app-cobranca-modal',\n  templateUrl: './app-cobranca-modal.component.html',\n  styleUrls: ['./app-cobranca-modal.component.css']\n})], CreateEditModalComponent);\nexport { CreateEditModalComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,MAAM,EAACC,KAAK,QAAQ,eAAe;AAU9D,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAOnC;EAEAC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAR3B,uBAAkB,GAAwB,IAAI;IAC5C,kBAAa,GAAG,IAAIL,YAAY,EAAY;IAC5C,qBAAgB,GAAG,IAAIA,YAAY,EAAW;IAC/C,qBAAgB,GAA6B,IAAI;IAC1D,eAAU,GAAW,CAAC;IACtB,gBAAW,GAAa;MAAEM,EAAE,EAAE,CAAC;MAAEC,SAAS,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,cAAc,EAAE,IAAIC,IAAI,EAAE;MAAEC,IAAI,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAE,CAAE;EAKjH;EACAC,QAAQ;IACN,IAAG,CAAC,IAAI,CAACC,gBAAgB,EAAC;MACxB;;IAEF,IAAG,CAAC,IAAI,CAACC,kBAAkB,EAAC;MAC1B;;IAEF,IAAI,CAACA,kBAAkB,GAAG,IAAI,CAACD,gBAAgB,CAACE,SAAS,CAAEV,EAAE,IAAI;MAC/D,IAAI,CAACW,SAAS,CAACX,EAAE,CAAC;IACpB,CAAC,CAAC;EACJ;EAEAY,WAAW;IACT,IAAG,CAAC,IAAI,CAACH,kBAAkB,EAAC;MAC1B;;IAEF,IAAI,CAACA,kBAAkB,CAACI,WAAW,EAAE;EACvC;EAEA,IAAWZ,SAAS;IAClB,OAAO,IAAI,CAACa,UAAU;EACxB;EAEA,IAAWb,SAAS,CAACD,EAAS;IAC5B,IAAI,CAACc,UAAU,GAAGd,EAAE;IACpB,IAAI,CAACW,SAAS,CAACX,EAAE,CAAC;EACpB;EACAW,SAAS,CAACV,SAAiB;IACzB,IAAGA,SAAS,KAAK,CAAC,EAAC;MACjB;;IAEF,IAAI,CAACc,WAAW,CAACd,SAAS,GAAGA,SAAS;IACtC;IACA,IAAI,CAACe,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;EAClC;EAGAC,UAAU;IACR,IAAI,CAACjB,SAAS,GAAG,CAAC;IAClB,IAAI,CAACe,gBAAgB,CAACC,IAAI,CAAC,KAAK,CAAC;IACjC;EACF;;EAEAE,WAAW;IACT,IAAI,CAACpB,eAAe,CAACqB,cAAc,CAAC,IAAI,CAACL,WAAW,CAAC,CAACL,SAAS,CAACW,QAAQ,IAAG;MACzE,IAAI,CAACC,aAAa,CAACL,IAAI,CAACI,QAAQ,CAAC;MACjC,IAAI,CAACH,UAAU,EAAE;IACnB,CAAC,CAAC;EACJ;CACD;AA3DWK,YAAT5B,MAAM,EAAE,+DAA8C;AAC7C4B,YAAT5B,MAAM,EAAE,kEAAgD;AAChD4B,YAAR3B,KAAK,EAAE,kEAAmD;AA+B3D2B,YADC3B,KAAK,EAAE,yDAIP;AAtCUC,wBAAwB,eALpCJ,SAAS,CAAC;EACT+B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,GACW7B,wBAAwB,CA6DpC;SA7DYA,wBAAwB","names":["Component","EventEmitter","Output","Input","CreateEditModalComponent","constructor","cobrancaService","id","clienteId","valor","dataVencimento","Date","pago","descricao","ngOnInit","addCobrancaEvent","eventsSubscription","subscribe","openModal","ngOnDestroy","unsubscribe","_clienteId","newCobranca","modalStateChange","emit","closeModal","addCobranca","createCobranca","cobranca","cobrancaAdded","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/components/create-edit-modal/app-cobranca-modal.component.ts"],"sourcesContent":["import { Component, EventEmitter, Output,Input } from '@angular/core'\nimport { Cobranca } from '../../services/cobranca.model'\nimport { CobrancaService } from '../../services/cobranca.service'\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-cobranca-modal',\n  templateUrl: './app-cobranca-modal.component.html',\n  styleUrls: ['./app-cobranca-modal.component.css']\n})\nexport class CreateEditModalComponent {\n  private eventsSubscription: Subscription | null = null;\n  @Output() cobrancaAdded = new EventEmitter<Cobranca>();  \n  @Output() modalStateChange = new EventEmitter<boolean>();  \n  @Input() addCobrancaEvent:Observable<number> | null = null;\n  _clienteId: number = 0;\n  newCobranca: Cobranca = { id: 0, clienteId: 0, valor: 0, dataVencimento: new Date(), pago: false, descricao: '' };\n  // showModal: boolean = false;\n\n  constructor(private cobrancaService: CobrancaService) {        \n    \n  }\n  ngOnInit(){\n    if(!this.addCobrancaEvent){\n      return;\n    }\n    if(!this.eventsSubscription){\n      return;\n    }\n    this.eventsSubscription = this.addCobrancaEvent.subscribe((id) => {\n      this.openModal(id)\n    });\n  }\n  \n  ngOnDestroy() {\n    if(!this.eventsSubscription){\n      return;\n    }\n    this.eventsSubscription.unsubscribe();\n  }\n  \n  public get clienteId() : number {\n    return this._clienteId\n  }\n  @Input()\n  public set clienteId(id:number) {    \n    this._clienteId = id\n    this.openModal(id);\n  }\n  openModal(clienteId: number): void {\n    if(clienteId === 0){\n      return;\n    }    \n    this.newCobranca.clienteId = clienteId;\n    // this.showModal = true;\n    this.modalStateChange.emit(true)\n  }\n\n\n  closeModal(): void {    \n    this.clienteId = 0    \n    this.modalStateChange.emit(false)    \n    // this.showModal = false;    \n  }\n\n  addCobranca(): void {\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n      this.cobrancaAdded.emit(cobranca);\n      this.closeModal();\n    });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}