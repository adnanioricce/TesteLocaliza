{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/cobranca.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CobrancasTableComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function CobrancasTableComponent_tr_17_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const cobranca_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateCobranca(cobranca_r1));\n    });\n    i0.ɵɵtext(11, \"Atualizar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function CobrancasTableComponent_tr_17_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const cobranca_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteCobranca(cobranca_r1.id));\n    });\n    i0.ɵɵtext(13, \"Excluir\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cobranca_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cobranca_r1.nome);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cobranca_r1.paginas);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cobranca_r1.alertas);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cobranca_r1.atrasos);\n  }\n}\nexport class CobrancasTableComponent {\n  constructor(cobrancaService) {\n    this.cobrancaService = cobrancaService;\n    this.vm = {\n      clienteId: 0,\n      linhas: []\n    };\n    this.newCobranca = {\n      id: 0,\n      clienteId: 0,\n      descricao: '',\n      dataVencimento: new Date(),\n      valor: 0.0,\n      pago: false\n    };\n    this.apiUrl = 'https://api.example.com/cobrancas';\n  }\n  ngOnInit() {\n    this.loadCobrancas();\n  }\n  loadCobrancas() {\n    this.cobrancaService.getAllCobrancas().subscribe(cobrancas => {\n      this.vm.linhas = cobrancas;\n    });\n  }\n  addCobranca() {\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n      this.vm.linhas.push(cobranca);\n      this.newCobranca = {\n        id: 0,\n        clienteId: 0,\n        valor: 0,\n        dataVencimento: new Date(),\n        pago: false,\n        descricao: ''\n      }; // Reset form\n    });\n  }\n\n  updateCobranca(updatedCobranca) {\n    this.cobrancaService.updateCobranca(updatedCobranca).subscribe(cobranca => {\n      const index = this.vm.linhas.findIndex(c => c.id === cobranca.id);\n      if (index !== -1) {\n        this.vm.linhas[index] = cobranca;\n      }\n    });\n  }\n  deleteCobranca(cobrancaId) {\n    this.cobrancaService.deleteCobranca(cobrancaId).subscribe(() => {\n      this.vm.linhas = this.vm.linhas.filter(c => c.id !== cobrancaId);\n    });\n  }\n  static #_ = this.ɵfac = function CobrancasTableComponent_Factory(t) {\n    return new (t || CobrancasTableComponent)(i0.ɵɵdirectiveInject(i1.CobrancaService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CobrancasTableComponent,\n    selectors: [[\"app-cobrancas\"]],\n    decls: 23,\n    vars: 2,\n    consts: [[1, \"container\"], [4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Nome\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function CobrancasTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Cobrancas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\")(4, \"thead\")(5, \"tr\")(6, \"th\");\n        i0.ɵɵtext(7, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"P\\u00E1ginas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Alertas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Atrasos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"A\\u00E7\\u00F5es\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"tbody\");\n        i0.ɵɵtemplate(17, CobrancasTableComponent_tr_17_Template, 14, 4, \"tr\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"h2\");\n        i0.ɵɵtext(19, \"Adicionar Cobranca\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CobrancasTableComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.vm.nome = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function CobrancasTableComponent_Template_button_click_21_listener() {\n          return ctx.addCobranca();\n        });\n        i0.ɵɵtext(22, \"Cadastrar\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.vm.linhas);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.vm.nome);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\".container[_ngcontent-%COMP%] {\\n    margin: 20px;\\n  }\\n  \\n  table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n  }\\n  \\n  th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n    border: 1px solid #000;\\n    padding: 10px;\\n    text-align: left;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    margin: 5px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb2JyYW5jYXMtdGFibGUvY29icmFuY2FzLXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxXQUFXO0lBQ1gseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxXQUFXO0VBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBtYXJnaW46IDIwcHg7XG4gIH1cbiAgXG4gIHRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICB9XG4gIFxuICB0aCwgdGQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG4gIFxuICBidXR0b24ge1xuICAgIG1hcmdpbjogNXB4O1xuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","CobrancasTableComponent","constructor","cobrancaService","clienteId","linhas","id","descricao","dataVencimento","Date","valor","pago","ngOnInit","loadCobrancas","getAllCobrancas","subscribe","cobrancas","vm","addCobranca","createCobranca","newCobranca","cobranca","push","updateCobranca","updatedCobranca","index","findIndex","c","deleteCobranca","cobrancaId","filter","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/components/cobrancas-table/cobrancas-table.component.html","/home/adnangonzaga/repos/LocalizaClientes/Localiza.Web/ClientApp/src/app/components/cobrancas-table/cobrancas-table.component.ts"],"sourcesContent":["<div class=\"container\">\n    <h1>Cobrancas</h1>\n    <table>\n      <thead>\n        <tr>\n          <th>Nome</th>\n          <th>Páginas</th>\n          <th>Alertas</th>\n          <th>Atrasos</th>\n          <th>Ações</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let cobranca of vm.linhas\">\n          <td>{{ cobranca.nome }}</td>\n          <td>{{ cobranca.paginas }}</td>\n          <td>{{ cobranca.alertas }}</td>\n          <td>{{ cobranca.atrasos }}</td>\n          <td>\n            <button (click)=\"updateCobranca(cobranca)\">Atualizar</button>\n            <button (click)=\"deleteCobranca(cobranca.id)\">Excluir</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  \n    <h2>Adicionar Cobranca</h2>\n    <input [(ngModel)]=\"vm.nome\" placeholder=\"Nome\" />\n    <button (click)=\"addCobranca()\">Cadastrar</button>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { CobrancaService } from 'src/app/services/cobranca.service';\nimport { Cobranca } from 'src/app/services/cobranca.model';\ninterface CobrancaTableViewModel {\n\n  clienteId: number  \n  linhas: Cobranca []\n}\n\n@Component({\n  selector: 'app-cobrancas',\n  templateUrl: './cobrancas-table.component.html',\n  styleUrls: ['./cobrancas-table.component.css']\n})\nexport class CobrancasTableComponent implements OnInit {\n  vm: CobrancaTableViewModel = {\n    clienteId:0\n    ,linhas: []\n  };\n  newCobranca: Cobranca = { id: 0, clienteId: 0, descricao: '',dataVencimento: new Date(),valor: 0.0, pago: false };\n\n  private apiUrl = 'https://api.example.com/cobrancas';\n\n  constructor(private cobrancaService: CobrancaService) {}  \n  ngOnInit(): void {\n    this.loadCobrancas();\n  }\n\n  loadCobrancas(): void {\n    this.cobrancaService.getAllCobrancas().subscribe(cobrancas => {\n\n      this.vm.linhas = cobrancas;\n\n    });\n  }\n\n  addCobranca(): void {\n\n    this.cobrancaService.createCobranca(this.newCobranca).subscribe(cobranca => {\n\n      this.vm.linhas.push(cobranca);\n\n      this.newCobranca = { id: 0, clienteId: 0, valor: 0, dataVencimento: new Date(), pago: false, descricao: '' }; // Reset form\n\n    });\n\n  }\n\n\n  updateCobranca(updatedCobranca: Cobranca): void {\n\n    this.cobrancaService.updateCobranca(updatedCobranca).subscribe(cobranca => {\n\n      const index = this.vm.linhas.findIndex(c => c.id === cobranca.id);\n\n      if (index !== -1) {\n\n        this.vm.linhas[index] = cobranca;\n\n      }\n\n    });\n\n  }\n\n\n  deleteCobranca(cobrancaId: number): void {\n\n    this.cobrancaService.deleteCobranca(cobrancaId).subscribe(() => {\n\n      this.vm.linhas = this.vm.linhas.filter(c => c.id !== cobrancaId);\n\n    });\n\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}